// Decompiled with JetBrains decompiler
// Type: ProxyBase.Packet
// Assembly: ProxyBase, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 077B98B9-686A-434C-992F-701D553EA96A
// Assembly location: C:\Users\snowi\Documents\projects\ProxyBase3-30-17\ProxyBase.exe

using System;
using System.Text;

namespace ProxyBase
{
  public abstract class Packet
  {
    protected static byte[][] saltTable = new byte[10][]
    {
      new byte[256]
      {
        (byte) 0,
        (byte) 1,
        (byte) 2,
        (byte) 3,
        (byte) 4,
        (byte) 5,
        (byte) 6,
        (byte) 7,
        (byte) 8,
        (byte) 9,
        (byte) 10,
        (byte) 11,
        (byte) 12,
        (byte) 13,
        (byte) 14,
        (byte) 15,
        (byte) 16,
        (byte) 17,
        (byte) 18,
        (byte) 19,
        (byte) 20,
        (byte) 21,
        (byte) 22,
        (byte) 23,
        (byte) 24,
        (byte) 25,
        (byte) 26,
        (byte) 27,
        (byte) 28,
        (byte) 29,
        (byte) 30,
        (byte) 31,
        (byte) 32,
        (byte) 33,
        (byte) 34,
        (byte) 35,
        (byte) 36,
        (byte) 37,
        (byte) 38,
        (byte) 39,
        (byte) 40,
        (byte) 41,
        (byte) 42,
        (byte) 43,
        (byte) 44,
        (byte) 45,
        (byte) 46,
        (byte) 47,
        (byte) 48,
        (byte) 49,
        (byte) 50,
        (byte) 51,
        (byte) 52,
        (byte) 53,
        (byte) 54,
        (byte) 55,
        (byte) 56,
        (byte) 57,
        (byte) 58,
        (byte) 59,
        (byte) 60,
        (byte) 61,
        (byte) 62,
        (byte) 63,
        (byte) 64,
        (byte) 65,
        (byte) 66,
        (byte) 67,
        (byte) 68,
        (byte) 69,
        (byte) 70,
        (byte) 71,
        (byte) 72,
        (byte) 73,
        (byte) 74,
        (byte) 75,
        (byte) 76,
        (byte) 77,
        (byte) 78,
        (byte) 79,
        (byte) 80,
        (byte) 81,
        (byte) 82,
        (byte) 83,
        (byte) 84,
        (byte) 85,
        (byte) 86,
        (byte) 87,
        (byte) 88,
        (byte) 89,
        (byte) 90,
        (byte) 91,
        (byte) 92,
        (byte) 93,
        (byte) 94,
        (byte) 95,
        (byte) 96,
        (byte) 97,
        (byte) 98,
        (byte) 99,
        (byte) 100,
        (byte) 101,
        (byte) 102,
        (byte) 103,
        (byte) 104,
        (byte) 105,
        (byte) 106,
        (byte) 107,
        (byte) 108,
        (byte) 109,
        (byte) 110,
        (byte) 111,
        (byte) 112,
        (byte) 113,
        (byte) 114,
        (byte) 115,
        (byte) 116,
        (byte) 117,
        (byte) 118,
        (byte) 119,
        (byte) 120,
        (byte) 121,
        (byte) 122,
        (byte) 123,
        (byte) 124,
        (byte) 125,
        (byte) 126,
        (byte) 127,
        (byte) 128,
        (byte) 129,
        (byte) 130,
        (byte) 131,
        (byte) 132,
        (byte) 133,
        (byte) 134,
        (byte) 135,
        (byte) 136,
        (byte) 137,
        (byte) 138,
        (byte) 139,
        (byte) 140,
        (byte) 141,
        (byte) 142,
        (byte) 143,
        (byte) 144,
        (byte) 145,
        (byte) 146,
        (byte) 147,
        (byte) 148,
        (byte) 149,
        (byte) 150,
        (byte) 151,
        (byte) 152,
        (byte) 153,
        (byte) 154,
        (byte) 155,
        (byte) 156,
        (byte) 157,
        (byte) 158,
        (byte) 159,
        (byte) 160,
        (byte) 161,
        (byte) 162,
        (byte) 163,
        (byte) 164,
        (byte) 165,
        (byte) 166,
        (byte) 167,
        (byte) 168,
        (byte) 169,
        (byte) 170,
        (byte) 171,
        (byte) 172,
        (byte) 173,
        (byte) 174,
        (byte) 175,
        (byte) 176,
        (byte) 177,
        (byte) 178,
        (byte) 179,
        (byte) 180,
        (byte) 181,
        (byte) 182,
        (byte) 183,
        (byte) 184,
        (byte) 185,
        (byte) 186,
        (byte) 187,
        (byte) 188,
        (byte) 189,
        (byte) 190,
        (byte) 191,
        (byte) 192,
        (byte) 193,
        (byte) 194,
        (byte) 195,
        (byte) 196,
        (byte) 197,
        (byte) 198,
        (byte) 199,
        (byte) 200,
        (byte) 201,
        (byte) 202,
        (byte) 203,
        (byte) 204,
        (byte) 205,
        (byte) 206,
        (byte) 207,
        (byte) 208,
        (byte) 209,
        (byte) 210,
        (byte) 211,
        (byte) 212,
        (byte) 213,
        (byte) 214,
        (byte) 215,
        (byte) 216,
        (byte) 217,
        (byte) 218,
        (byte) 219,
        (byte) 220,
        (byte) 221,
        (byte) 222,
        (byte) 223,
        (byte) 224,
        (byte) 225,
        (byte) 226,
        (byte) 227,
        (byte) 228,
        (byte) 229,
        (byte) 230,
        (byte) 231,
        (byte) 232,
        (byte) 233,
        (byte) 234,
        (byte) 235,
        (byte) 236,
        (byte) 237,
        (byte) 238,
        (byte) 239,
        (byte) 240,
        (byte) 241,
        (byte) 242,
        (byte) 243,
        (byte) 244,
        (byte) 245,
        (byte) 246,
        (byte) 247,
        (byte) 248,
        (byte) 249,
        (byte) 250,
        (byte) 251,
        (byte) 252,
        (byte) 253,
        (byte) 254,
        byte.MaxValue
      },
      new byte[256]
      {
        (byte) 128,
        (byte) 127,
        (byte) 129,
        (byte) 126,
        (byte) 130,
        (byte) 125,
        (byte) 131,
        (byte) 124,
        (byte) 132,
        (byte) 123,
        (byte) 133,
        (byte) 122,
        (byte) 134,
        (byte) 121,
        (byte) 135,
        (byte) 120,
        (byte) 136,
        (byte) 119,
        (byte) 137,
        (byte) 118,
        (byte) 138,
        (byte) 117,
        (byte) 139,
        (byte) 116,
        (byte) 140,
        (byte) 115,
        (byte) 141,
        (byte) 114,
        (byte) 142,
        (byte) 113,
        (byte) 143,
        (byte) 112,
        (byte) 144,
        (byte) 111,
        (byte) 145,
        (byte) 110,
        (byte) 146,
        (byte) 109,
        (byte) 147,
        (byte) 108,
        (byte) 148,
        (byte) 107,
        (byte) 149,
        (byte) 106,
        (byte) 150,
        (byte) 105,
        (byte) 151,
        (byte) 104,
        (byte) 152,
        (byte) 103,
        (byte) 153,
        (byte) 102,
        (byte) 154,
        (byte) 101,
        (byte) 155,
        (byte) 100,
        (byte) 156,
        (byte) 99,
        (byte) 157,
        (byte) 98,
        (byte) 158,
        (byte) 97,
        (byte) 159,
        (byte) 96,
        (byte) 160,
        (byte) 95,
        (byte) 161,
        (byte) 94,
        (byte) 162,
        (byte) 93,
        (byte) 163,
        (byte) 92,
        (byte) 164,
        (byte) 91,
        (byte) 165,
        (byte) 90,
        (byte) 166,
        (byte) 89,
        (byte) 167,
        (byte) 88,
        (byte) 168,
        (byte) 87,
        (byte) 169,
        (byte) 86,
        (byte) 170,
        (byte) 85,
        (byte) 171,
        (byte) 84,
        (byte) 172,
        (byte) 83,
        (byte) 173,
        (byte) 82,
        (byte) 174,
        (byte) 81,
        (byte) 175,
        (byte) 80,
        (byte) 176,
        (byte) 79,
        (byte) 177,
        (byte) 78,
        (byte) 178,
        (byte) 77,
        (byte) 179,
        (byte) 76,
        (byte) 180,
        (byte) 75,
        (byte) 181,
        (byte) 74,
        (byte) 182,
        (byte) 73,
        (byte) 183,
        (byte) 72,
        (byte) 184,
        (byte) 71,
        (byte) 185,
        (byte) 70,
        (byte) 186,
        (byte) 69,
        (byte) 187,
        (byte) 68,
        (byte) 188,
        (byte) 67,
        (byte) 189,
        (byte) 66,
        (byte) 190,
        (byte) 65,
        (byte) 191,
        (byte) 64,
        (byte) 192,
        (byte) 63,
        (byte) 193,
        (byte) 62,
        (byte) 194,
        (byte) 61,
        (byte) 195,
        (byte) 60,
        (byte) 196,
        (byte) 59,
        (byte) 197,
        (byte) 58,
        (byte) 198,
        (byte) 57,
        (byte) 199,
        (byte) 56,
        (byte) 200,
        (byte) 55,
        (byte) 201,
        (byte) 54,
        (byte) 202,
        (byte) 53,
        (byte) 203,
        (byte) 52,
        (byte) 204,
        (byte) 51,
        (byte) 205,
        (byte) 50,
        (byte) 206,
        (byte) 49,
        (byte) 207,
        (byte) 48,
        (byte) 208,
        (byte) 47,
        (byte) 209,
        (byte) 46,
        (byte) 210,
        (byte) 45,
        (byte) 211,
        (byte) 44,
        (byte) 212,
        (byte) 43,
        (byte) 213,
        (byte) 42,
        (byte) 214,
        (byte) 41,
        (byte) 215,
        (byte) 40,
        (byte) 216,
        (byte) 39,
        (byte) 217,
        (byte) 38,
        (byte) 218,
        (byte) 37,
        (byte) 219,
        (byte) 36,
        (byte) 220,
        (byte) 35,
        (byte) 221,
        (byte) 34,
        (byte) 222,
        (byte) 33,
        (byte) 223,
        (byte) 32,
        (byte) 224,
        (byte) 31,
        (byte) 225,
        (byte) 30,
        (byte) 226,
        (byte) 29,
        (byte) 227,
        (byte) 28,
        (byte) 228,
        (byte) 27,
        (byte) 229,
        (byte) 26,
        (byte) 230,
        (byte) 25,
        (byte) 231,
        (byte) 24,
        (byte) 232,
        (byte) 23,
        (byte) 233,
        (byte) 22,
        (byte) 234,
        (byte) 21,
        (byte) 235,
        (byte) 20,
        (byte) 236,
        (byte) 19,
        (byte) 237,
        (byte) 18,
        (byte) 238,
        (byte) 17,
        (byte) 239,
        (byte) 16,
        (byte) 240,
        (byte) 15,
        (byte) 241,
        (byte) 14,
        (byte) 242,
        (byte) 13,
        (byte) 243,
        (byte) 12,
        (byte) 244,
        (byte) 11,
        (byte) 245,
        (byte) 10,
        (byte) 246,
        (byte) 9,
        (byte) 247,
        (byte) 8,
        (byte) 248,
        (byte) 7,
        (byte) 249,
        (byte) 6,
        (byte) 250,
        (byte) 5,
        (byte) 251,
        (byte) 4,
        (byte) 252,
        (byte) 3,
        (byte) 253,
        (byte) 2,
        (byte) 254,
        (byte) 1,
        byte.MaxValue,
        (byte) 0
      },
      new byte[256]
      {
        byte.MaxValue,
        (byte) 254,
        (byte) 253,
        (byte) 252,
        (byte) 251,
        (byte) 250,
        (byte) 249,
        (byte) 248,
        (byte) 247,
        (byte) 246,
        (byte) 245,
        (byte) 244,
        (byte) 243,
        (byte) 242,
        (byte) 241,
        (byte) 240,
        (byte) 239,
        (byte) 238,
        (byte) 237,
        (byte) 236,
        (byte) 235,
        (byte) 234,
        (byte) 233,
        (byte) 232,
        (byte) 231,
        (byte) 230,
        (byte) 229,
        (byte) 228,
        (byte) 227,
        (byte) 226,
        (byte) 225,
        (byte) 224,
        (byte) 223,
        (byte) 222,
        (byte) 221,
        (byte) 220,
        (byte) 219,
        (byte) 218,
        (byte) 217,
        (byte) 216,
        (byte) 215,
        (byte) 214,
        (byte) 213,
        (byte) 212,
        (byte) 211,
        (byte) 210,
        (byte) 209,
        (byte) 208,
        (byte) 207,
        (byte) 206,
        (byte) 205,
        (byte) 204,
        (byte) 203,
        (byte) 202,
        (byte) 201,
        (byte) 200,
        (byte) 199,
        (byte) 198,
        (byte) 197,
        (byte) 196,
        (byte) 195,
        (byte) 194,
        (byte) 193,
        (byte) 192,
        (byte) 191,
        (byte) 190,
        (byte) 189,
        (byte) 188,
        (byte) 187,
        (byte) 186,
        (byte) 185,
        (byte) 184,
        (byte) 183,
        (byte) 182,
        (byte) 181,
        (byte) 180,
        (byte) 179,
        (byte) 178,
        (byte) 177,
        (byte) 176,
        (byte) 175,
        (byte) 174,
        (byte) 173,
        (byte) 172,
        (byte) 171,
        (byte) 170,
        (byte) 169,
        (byte) 168,
        (byte) 167,
        (byte) 166,
        (byte) 165,
        (byte) 164,
        (byte) 163,
        (byte) 162,
        (byte) 161,
        (byte) 160,
        (byte) 159,
        (byte) 158,
        (byte) 157,
        (byte) 156,
        (byte) 155,
        (byte) 154,
        (byte) 153,
        (byte) 152,
        (byte) 151,
        (byte) 150,
        (byte) 149,
        (byte) 148,
        (byte) 147,
        (byte) 146,
        (byte) 145,
        (byte) 144,
        (byte) 143,
        (byte) 142,
        (byte) 141,
        (byte) 140,
        (byte) 139,
        (byte) 138,
        (byte) 137,
        (byte) 136,
        (byte) 135,
        (byte) 134,
        (byte) 133,
        (byte) 132,
        (byte) 131,
        (byte) 130,
        (byte) 129,
        (byte) 128,
        (byte) 127,
        (byte) 126,
        (byte) 125,
        (byte) 124,
        (byte) 123,
        (byte) 122,
        (byte) 121,
        (byte) 120,
        (byte) 119,
        (byte) 118,
        (byte) 117,
        (byte) 116,
        (byte) 115,
        (byte) 114,
        (byte) 113,
        (byte) 112,
        (byte) 111,
        (byte) 110,
        (byte) 109,
        (byte) 108,
        (byte) 107,
        (byte) 106,
        (byte) 105,
        (byte) 104,
        (byte) 103,
        (byte) 102,
        (byte) 101,
        (byte) 100,
        (byte) 99,
        (byte) 98,
        (byte) 97,
        (byte) 96,
        (byte) 95,
        (byte) 94,
        (byte) 93,
        (byte) 92,
        (byte) 91,
        (byte) 90,
        (byte) 89,
        (byte) 88,
        (byte) 87,
        (byte) 86,
        (byte) 85,
        (byte) 84,
        (byte) 83,
        (byte) 82,
        (byte) 81,
        (byte) 80,
        (byte) 79,
        (byte) 78,
        (byte) 77,
        (byte) 76,
        (byte) 75,
        (byte) 74,
        (byte) 73,
        (byte) 72,
        (byte) 71,
        (byte) 70,
        (byte) 69,
        (byte) 68,
        (byte) 67,
        (byte) 66,
        (byte) 65,
        (byte) 64,
        (byte) 63,
        (byte) 62,
        (byte) 61,
        (byte) 60,
        (byte) 59,
        (byte) 58,
        (byte) 57,
        (byte) 56,
        (byte) 55,
        (byte) 54,
        (byte) 53,
        (byte) 52,
        (byte) 51,
        (byte) 50,
        (byte) 49,
        (byte) 48,
        (byte) 47,
        (byte) 46,
        (byte) 45,
        (byte) 44,
        (byte) 43,
        (byte) 42,
        (byte) 41,
        (byte) 40,
        (byte) 39,
        (byte) 38,
        (byte) 37,
        (byte) 36,
        (byte) 35,
        (byte) 34,
        (byte) 33,
        (byte) 32,
        (byte) 31,
        (byte) 30,
        (byte) 29,
        (byte) 28,
        (byte) 27,
        (byte) 26,
        (byte) 25,
        (byte) 24,
        (byte) 23,
        (byte) 22,
        (byte) 21,
        (byte) 20,
        (byte) 19,
        (byte) 18,
        (byte) 17,
        (byte) 16,
        (byte) 15,
        (byte) 14,
        (byte) 13,
        (byte) 12,
        (byte) 11,
        (byte) 10,
        (byte) 9,
        (byte) 8,
        (byte) 7,
        (byte) 6,
        (byte) 5,
        (byte) 4,
        (byte) 3,
        (byte) 2,
        (byte) 1,
        (byte) 0
      },
      new byte[256]
      {
        byte.MaxValue,
        (byte) 1,
        (byte) 254,
        (byte) 2,
        (byte) 253,
        (byte) 3,
        (byte) 252,
        (byte) 4,
        (byte) 251,
        (byte) 5,
        (byte) 250,
        (byte) 6,
        (byte) 249,
        (byte) 7,
        (byte) 248,
        (byte) 8,
        (byte) 247,
        (byte) 9,
        (byte) 246,
        (byte) 10,
        (byte) 245,
        (byte) 11,
        (byte) 244,
        (byte) 12,
        (byte) 243,
        (byte) 13,
        (byte) 242,
        (byte) 14,
        (byte) 241,
        (byte) 15,
        (byte) 240,
        (byte) 16,
        (byte) 239,
        (byte) 17,
        (byte) 238,
        (byte) 18,
        (byte) 237,
        (byte) 19,
        (byte) 236,
        (byte) 20,
        (byte) 235,
        (byte) 21,
        (byte) 234,
        (byte) 22,
        (byte) 233,
        (byte) 23,
        (byte) 232,
        (byte) 24,
        (byte) 231,
        (byte) 25,
        (byte) 230,
        (byte) 26,
        (byte) 229,
        (byte) 27,
        (byte) 228,
        (byte) 28,
        (byte) 227,
        (byte) 29,
        (byte) 226,
        (byte) 30,
        (byte) 225,
        (byte) 31,
        (byte) 224,
        (byte) 32,
        (byte) 223,
        (byte) 33,
        (byte) 222,
        (byte) 34,
        (byte) 221,
        (byte) 35,
        (byte) 220,
        (byte) 36,
        (byte) 219,
        (byte) 37,
        (byte) 218,
        (byte) 38,
        (byte) 217,
        (byte) 39,
        (byte) 216,
        (byte) 40,
        (byte) 215,
        (byte) 41,
        (byte) 214,
        (byte) 42,
        (byte) 213,
        (byte) 43,
        (byte) 212,
        (byte) 44,
        (byte) 211,
        (byte) 45,
        (byte) 210,
        (byte) 46,
        (byte) 209,
        (byte) 47,
        (byte) 208,
        (byte) 48,
        (byte) 207,
        (byte) 49,
        (byte) 206,
        (byte) 50,
        (byte) 205,
        (byte) 51,
        (byte) 204,
        (byte) 52,
        (byte) 203,
        (byte) 53,
        (byte) 202,
        (byte) 54,
        (byte) 201,
        (byte) 55,
        (byte) 200,
        (byte) 56,
        (byte) 199,
        (byte) 57,
        (byte) 198,
        (byte) 58,
        (byte) 197,
        (byte) 59,
        (byte) 196,
        (byte) 60,
        (byte) 195,
        (byte) 61,
        (byte) 194,
        (byte) 62,
        (byte) 193,
        (byte) 63,
        (byte) 192,
        (byte) 64,
        (byte) 191,
        (byte) 65,
        (byte) 190,
        (byte) 66,
        (byte) 189,
        (byte) 67,
        (byte) 188,
        (byte) 68,
        (byte) 187,
        (byte) 69,
        (byte) 186,
        (byte) 70,
        (byte) 185,
        (byte) 71,
        (byte) 184,
        (byte) 72,
        (byte) 183,
        (byte) 73,
        (byte) 182,
        (byte) 74,
        (byte) 181,
        (byte) 75,
        (byte) 180,
        (byte) 76,
        (byte) 179,
        (byte) 77,
        (byte) 178,
        (byte) 78,
        (byte) 177,
        (byte) 79,
        (byte) 176,
        (byte) 80,
        (byte) 175,
        (byte) 81,
        (byte) 174,
        (byte) 82,
        (byte) 173,
        (byte) 83,
        (byte) 172,
        (byte) 84,
        (byte) 171,
        (byte) 85,
        (byte) 170,
        (byte) 86,
        (byte) 169,
        (byte) 87,
        (byte) 168,
        (byte) 88,
        (byte) 167,
        (byte) 89,
        (byte) 166,
        (byte) 90,
        (byte) 165,
        (byte) 91,
        (byte) 164,
        (byte) 92,
        (byte) 163,
        (byte) 93,
        (byte) 162,
        (byte) 94,
        (byte) 161,
        (byte) 95,
        (byte) 160,
        (byte) 96,
        (byte) 159,
        (byte) 97,
        (byte) 158,
        (byte) 98,
        (byte) 157,
        (byte) 99,
        (byte) 156,
        (byte) 100,
        (byte) 155,
        (byte) 101,
        (byte) 154,
        (byte) 102,
        (byte) 153,
        (byte) 103,
        (byte) 152,
        (byte) 104,
        (byte) 151,
        (byte) 105,
        (byte) 150,
        (byte) 106,
        (byte) 149,
        (byte) 107,
        (byte) 148,
        (byte) 108,
        (byte) 147,
        (byte) 109,
        (byte) 146,
        (byte) 110,
        (byte) 145,
        (byte) 111,
        (byte) 144,
        (byte) 112,
        (byte) 143,
        (byte) 113,
        (byte) 142,
        (byte) 114,
        (byte) 141,
        (byte) 115,
        (byte) 140,
        (byte) 116,
        (byte) 139,
        (byte) 117,
        (byte) 138,
        (byte) 118,
        (byte) 137,
        (byte) 119,
        (byte) 136,
        (byte) 120,
        (byte) 135,
        (byte) 121,
        (byte) 134,
        (byte) 122,
        (byte) 133,
        (byte) 123,
        (byte) 132,
        (byte) 124,
        (byte) 131,
        (byte) 125,
        (byte) 130,
        (byte) 126,
        (byte) 129,
        (byte) 127,
        (byte) 128,
        (byte) 128
      },
      new byte[256]
      {
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 0,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 1,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 4,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 9,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 16,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 25,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 36,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 49,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 64,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 81,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 100,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 121,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 144,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 169,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 196,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225,
        (byte) 225
      },
      new byte[256]
      {
        (byte) 0,
        (byte) 2,
        (byte) 4,
        (byte) 6,
        (byte) 8,
        (byte) 10,
        (byte) 12,
        (byte) 14,
        (byte) 16,
        (byte) 18,
        (byte) 20,
        (byte) 22,
        (byte) 24,
        (byte) 26,
        (byte) 28,
        (byte) 30,
        (byte) 32,
        (byte) 34,
        (byte) 36,
        (byte) 38,
        (byte) 40,
        (byte) 42,
        (byte) 44,
        (byte) 46,
        (byte) 48,
        (byte) 50,
        (byte) 52,
        (byte) 54,
        (byte) 56,
        (byte) 58,
        (byte) 60,
        (byte) 62,
        (byte) 64,
        (byte) 66,
        (byte) 68,
        (byte) 70,
        (byte) 72,
        (byte) 74,
        (byte) 76,
        (byte) 78,
        (byte) 80,
        (byte) 82,
        (byte) 84,
        (byte) 86,
        (byte) 88,
        (byte) 90,
        (byte) 92,
        (byte) 94,
        (byte) 96,
        (byte) 98,
        (byte) 100,
        (byte) 102,
        (byte) 104,
        (byte) 106,
        (byte) 108,
        (byte) 110,
        (byte) 112,
        (byte) 114,
        (byte) 116,
        (byte) 118,
        (byte) 120,
        (byte) 122,
        (byte) 124,
        (byte) 126,
        (byte) 128,
        (byte) 130,
        (byte) 132,
        (byte) 134,
        (byte) 136,
        (byte) 138,
        (byte) 140,
        (byte) 142,
        (byte) 144,
        (byte) 146,
        (byte) 148,
        (byte) 150,
        (byte) 152,
        (byte) 154,
        (byte) 156,
        (byte) 158,
        (byte) 160,
        (byte) 162,
        (byte) 164,
        (byte) 166,
        (byte) 168,
        (byte) 170,
        (byte) 172,
        (byte) 174,
        (byte) 176,
        (byte) 178,
        (byte) 180,
        (byte) 182,
        (byte) 184,
        (byte) 186,
        (byte) 188,
        (byte) 190,
        (byte) 192,
        (byte) 194,
        (byte) 196,
        (byte) 198,
        (byte) 200,
        (byte) 202,
        (byte) 204,
        (byte) 206,
        (byte) 208,
        (byte) 210,
        (byte) 212,
        (byte) 214,
        (byte) 216,
        (byte) 218,
        (byte) 220,
        (byte) 222,
        (byte) 224,
        (byte) 226,
        (byte) 228,
        (byte) 230,
        (byte) 232,
        (byte) 234,
        (byte) 236,
        (byte) 238,
        (byte) 240,
        (byte) 242,
        (byte) 244,
        (byte) 246,
        (byte) 248,
        (byte) 250,
        (byte) 252,
        (byte) 254,
        (byte) 0,
        (byte) 2,
        (byte) 4,
        (byte) 6,
        (byte) 8,
        (byte) 10,
        (byte) 12,
        (byte) 14,
        (byte) 16,
        (byte) 18,
        (byte) 20,
        (byte) 22,
        (byte) 24,
        (byte) 26,
        (byte) 28,
        (byte) 30,
        (byte) 32,
        (byte) 34,
        (byte) 36,
        (byte) 38,
        (byte) 40,
        (byte) 42,
        (byte) 44,
        (byte) 46,
        (byte) 48,
        (byte) 50,
        (byte) 52,
        (byte) 54,
        (byte) 56,
        (byte) 58,
        (byte) 60,
        (byte) 62,
        (byte) 64,
        (byte) 66,
        (byte) 68,
        (byte) 70,
        (byte) 72,
        (byte) 74,
        (byte) 76,
        (byte) 78,
        (byte) 80,
        (byte) 82,
        (byte) 84,
        (byte) 86,
        (byte) 88,
        (byte) 90,
        (byte) 92,
        (byte) 94,
        (byte) 96,
        (byte) 98,
        (byte) 100,
        (byte) 102,
        (byte) 104,
        (byte) 106,
        (byte) 108,
        (byte) 110,
        (byte) 112,
        (byte) 114,
        (byte) 116,
        (byte) 118,
        (byte) 120,
        (byte) 122,
        (byte) 124,
        (byte) 126,
        (byte) 128,
        (byte) 130,
        (byte) 132,
        (byte) 134,
        (byte) 136,
        (byte) 138,
        (byte) 140,
        (byte) 142,
        (byte) 144,
        (byte) 146,
        (byte) 148,
        (byte) 150,
        (byte) 152,
        (byte) 154,
        (byte) 156,
        (byte) 158,
        (byte) 160,
        (byte) 162,
        (byte) 164,
        (byte) 166,
        (byte) 168,
        (byte) 170,
        (byte) 172,
        (byte) 174,
        (byte) 176,
        (byte) 178,
        (byte) 180,
        (byte) 182,
        (byte) 184,
        (byte) 186,
        (byte) 188,
        (byte) 190,
        (byte) 192,
        (byte) 194,
        (byte) 196,
        (byte) 198,
        (byte) 200,
        (byte) 202,
        (byte) 204,
        (byte) 206,
        (byte) 208,
        (byte) 210,
        (byte) 212,
        (byte) 214,
        (byte) 216,
        (byte) 218,
        (byte) 220,
        (byte) 222,
        (byte) 224,
        (byte) 226,
        (byte) 228,
        (byte) 230,
        (byte) 232,
        (byte) 234,
        (byte) 236,
        (byte) 238,
        (byte) 240,
        (byte) 242,
        (byte) 244,
        (byte) 246,
        (byte) 248,
        (byte) 250,
        (byte) 252,
        (byte) 254
      },
      new byte[256]
      {
        byte.MaxValue,
        (byte) 253,
        (byte) 251,
        (byte) 249,
        (byte) 247,
        (byte) 245,
        (byte) 243,
        (byte) 241,
        (byte) 239,
        (byte) 237,
        (byte) 235,
        (byte) 233,
        (byte) 231,
        (byte) 229,
        (byte) 227,
        (byte) 225,
        (byte) 223,
        (byte) 221,
        (byte) 219,
        (byte) 217,
        (byte) 215,
        (byte) 213,
        (byte) 211,
        (byte) 209,
        (byte) 207,
        (byte) 205,
        (byte) 203,
        (byte) 201,
        (byte) 199,
        (byte) 197,
        (byte) 195,
        (byte) 193,
        (byte) 191,
        (byte) 189,
        (byte) 187,
        (byte) 185,
        (byte) 183,
        (byte) 181,
        (byte) 179,
        (byte) 177,
        (byte) 175,
        (byte) 173,
        (byte) 171,
        (byte) 169,
        (byte) 167,
        (byte) 165,
        (byte) 163,
        (byte) 161,
        (byte) 159,
        (byte) 157,
        (byte) 155,
        (byte) 153,
        (byte) 151,
        (byte) 149,
        (byte) 147,
        (byte) 145,
        (byte) 143,
        (byte) 141,
        (byte) 139,
        (byte) 137,
        (byte) 135,
        (byte) 133,
        (byte) 131,
        (byte) 129,
        (byte) 127,
        (byte) 125,
        (byte) 123,
        (byte) 121,
        (byte) 119,
        (byte) 117,
        (byte) 115,
        (byte) 113,
        (byte) 111,
        (byte) 109,
        (byte) 107,
        (byte) 105,
        (byte) 103,
        (byte) 101,
        (byte) 99,
        (byte) 97,
        (byte) 95,
        (byte) 93,
        (byte) 91,
        (byte) 89,
        (byte) 87,
        (byte) 85,
        (byte) 83,
        (byte) 81,
        (byte) 79,
        (byte) 77,
        (byte) 75,
        (byte) 73,
        (byte) 71,
        (byte) 69,
        (byte) 67,
        (byte) 65,
        (byte) 63,
        (byte) 61,
        (byte) 59,
        (byte) 57,
        (byte) 55,
        (byte) 53,
        (byte) 51,
        (byte) 49,
        (byte) 47,
        (byte) 45,
        (byte) 43,
        (byte) 41,
        (byte) 39,
        (byte) 37,
        (byte) 35,
        (byte) 33,
        (byte) 31,
        (byte) 29,
        (byte) 27,
        (byte) 25,
        (byte) 23,
        (byte) 21,
        (byte) 19,
        (byte) 17,
        (byte) 15,
        (byte) 13,
        (byte) 11,
        (byte) 9,
        (byte) 7,
        (byte) 5,
        (byte) 3,
        (byte) 1,
        byte.MaxValue,
        (byte) 253,
        (byte) 251,
        (byte) 249,
        (byte) 247,
        (byte) 245,
        (byte) 243,
        (byte) 241,
        (byte) 239,
        (byte) 237,
        (byte) 235,
        (byte) 233,
        (byte) 231,
        (byte) 229,
        (byte) 227,
        (byte) 225,
        (byte) 223,
        (byte) 221,
        (byte) 219,
        (byte) 217,
        (byte) 215,
        (byte) 213,
        (byte) 211,
        (byte) 209,
        (byte) 207,
        (byte) 205,
        (byte) 203,
        (byte) 201,
        (byte) 199,
        (byte) 197,
        (byte) 195,
        (byte) 193,
        (byte) 191,
        (byte) 189,
        (byte) 187,
        (byte) 185,
        (byte) 183,
        (byte) 181,
        (byte) 179,
        (byte) 177,
        (byte) 175,
        (byte) 173,
        (byte) 171,
        (byte) 169,
        (byte) 167,
        (byte) 165,
        (byte) 163,
        (byte) 161,
        (byte) 159,
        (byte) 157,
        (byte) 155,
        (byte) 153,
        (byte) 151,
        (byte) 149,
        (byte) 147,
        (byte) 145,
        (byte) 143,
        (byte) 141,
        (byte) 139,
        (byte) 137,
        (byte) 135,
        (byte) 133,
        (byte) 131,
        (byte) 129,
        (byte) 127,
        (byte) 125,
        (byte) 123,
        (byte) 121,
        (byte) 119,
        (byte) 117,
        (byte) 115,
        (byte) 113,
        (byte) 111,
        (byte) 109,
        (byte) 107,
        (byte) 105,
        (byte) 103,
        (byte) 101,
        (byte) 99,
        (byte) 97,
        (byte) 95,
        (byte) 93,
        (byte) 91,
        (byte) 89,
        (byte) 87,
        (byte) 85,
        (byte) 83,
        (byte) 81,
        (byte) 79,
        (byte) 77,
        (byte) 75,
        (byte) 73,
        (byte) 71,
        (byte) 69,
        (byte) 67,
        (byte) 65,
        (byte) 63,
        (byte) 61,
        (byte) 59,
        (byte) 57,
        (byte) 55,
        (byte) 53,
        (byte) 51,
        (byte) 49,
        (byte) 47,
        (byte) 45,
        (byte) 43,
        (byte) 41,
        (byte) 39,
        (byte) 37,
        (byte) 35,
        (byte) 33,
        (byte) 31,
        (byte) 29,
        (byte) 27,
        (byte) 25,
        (byte) 23,
        (byte) 21,
        (byte) 19,
        (byte) 17,
        (byte) 15,
        (byte) 13,
        (byte) 11,
        (byte) 9,
        (byte) 7,
        (byte) 5,
        (byte) 3,
        (byte) 1
      },
      new byte[256]
      {
        byte.MaxValue,
        (byte) 253,
        (byte) 251,
        (byte) 249,
        (byte) 247,
        (byte) 245,
        (byte) 243,
        (byte) 241,
        (byte) 239,
        (byte) 237,
        (byte) 235,
        (byte) 233,
        (byte) 231,
        (byte) 229,
        (byte) 227,
        (byte) 225,
        (byte) 223,
        (byte) 221,
        (byte) 219,
        (byte) 217,
        (byte) 215,
        (byte) 213,
        (byte) 211,
        (byte) 209,
        (byte) 207,
        (byte) 205,
        (byte) 203,
        (byte) 201,
        (byte) 199,
        (byte) 197,
        (byte) 195,
        (byte) 193,
        (byte) 191,
        (byte) 189,
        (byte) 187,
        (byte) 185,
        (byte) 183,
        (byte) 181,
        (byte) 179,
        (byte) 177,
        (byte) 175,
        (byte) 173,
        (byte) 171,
        (byte) 169,
        (byte) 167,
        (byte) 165,
        (byte) 163,
        (byte) 161,
        (byte) 159,
        (byte) 157,
        (byte) 155,
        (byte) 153,
        (byte) 151,
        (byte) 149,
        (byte) 147,
        (byte) 145,
        (byte) 143,
        (byte) 141,
        (byte) 139,
        (byte) 137,
        (byte) 135,
        (byte) 133,
        (byte) 131,
        (byte) 129,
        (byte) 127,
        (byte) 125,
        (byte) 123,
        (byte) 121,
        (byte) 119,
        (byte) 117,
        (byte) 115,
        (byte) 113,
        (byte) 111,
        (byte) 109,
        (byte) 107,
        (byte) 105,
        (byte) 103,
        (byte) 101,
        (byte) 99,
        (byte) 97,
        (byte) 95,
        (byte) 93,
        (byte) 91,
        (byte) 89,
        (byte) 87,
        (byte) 85,
        (byte) 83,
        (byte) 81,
        (byte) 79,
        (byte) 77,
        (byte) 75,
        (byte) 73,
        (byte) 71,
        (byte) 69,
        (byte) 67,
        (byte) 65,
        (byte) 63,
        (byte) 61,
        (byte) 59,
        (byte) 57,
        (byte) 55,
        (byte) 53,
        (byte) 51,
        (byte) 49,
        (byte) 47,
        (byte) 45,
        (byte) 43,
        (byte) 41,
        (byte) 39,
        (byte) 37,
        (byte) 35,
        (byte) 33,
        (byte) 31,
        (byte) 29,
        (byte) 27,
        (byte) 25,
        (byte) 23,
        (byte) 21,
        (byte) 19,
        (byte) 17,
        (byte) 15,
        (byte) 13,
        (byte) 11,
        (byte) 9,
        (byte) 7,
        (byte) 5,
        (byte) 3,
        (byte) 1,
        (byte) 0,
        (byte) 2,
        (byte) 4,
        (byte) 6,
        (byte) 8,
        (byte) 10,
        (byte) 12,
        (byte) 14,
        (byte) 16,
        (byte) 18,
        (byte) 20,
        (byte) 22,
        (byte) 24,
        (byte) 26,
        (byte) 28,
        (byte) 30,
        (byte) 32,
        (byte) 34,
        (byte) 36,
        (byte) 38,
        (byte) 40,
        (byte) 42,
        (byte) 44,
        (byte) 46,
        (byte) 48,
        (byte) 50,
        (byte) 52,
        (byte) 54,
        (byte) 56,
        (byte) 58,
        (byte) 60,
        (byte) 62,
        (byte) 64,
        (byte) 66,
        (byte) 68,
        (byte) 70,
        (byte) 72,
        (byte) 74,
        (byte) 76,
        (byte) 78,
        (byte) 80,
        (byte) 82,
        (byte) 84,
        (byte) 86,
        (byte) 88,
        (byte) 90,
        (byte) 92,
        (byte) 94,
        (byte) 96,
        (byte) 98,
        (byte) 100,
        (byte) 102,
        (byte) 104,
        (byte) 106,
        (byte) 108,
        (byte) 110,
        (byte) 112,
        (byte) 114,
        (byte) 116,
        (byte) 118,
        (byte) 120,
        (byte) 122,
        (byte) 124,
        (byte) 126,
        (byte) 128,
        (byte) 130,
        (byte) 132,
        (byte) 134,
        (byte) 136,
        (byte) 138,
        (byte) 140,
        (byte) 142,
        (byte) 144,
        (byte) 146,
        (byte) 148,
        (byte) 150,
        (byte) 152,
        (byte) 154,
        (byte) 156,
        (byte) 158,
        (byte) 160,
        (byte) 162,
        (byte) 164,
        (byte) 166,
        (byte) 168,
        (byte) 170,
        (byte) 172,
        (byte) 174,
        (byte) 176,
        (byte) 178,
        (byte) 180,
        (byte) 182,
        (byte) 184,
        (byte) 186,
        (byte) 188,
        (byte) 190,
        (byte) 192,
        (byte) 194,
        (byte) 196,
        (byte) 198,
        (byte) 200,
        (byte) 202,
        (byte) 204,
        (byte) 206,
        (byte) 208,
        (byte) 210,
        (byte) 212,
        (byte) 214,
        (byte) 216,
        (byte) 218,
        (byte) 220,
        (byte) 222,
        (byte) 224,
        (byte) 226,
        (byte) 228,
        (byte) 230,
        (byte) 232,
        (byte) 234,
        (byte) 236,
        (byte) 238,
        (byte) 240,
        (byte) 242,
        (byte) 244,
        (byte) 246,
        (byte) 248,
        (byte) 250,
        (byte) 252,
        (byte) 254
      },
      new byte[256]
      {
        (byte) 0,
        (byte) 2,
        (byte) 4,
        (byte) 6,
        (byte) 8,
        (byte) 10,
        (byte) 12,
        (byte) 14,
        (byte) 16,
        (byte) 18,
        (byte) 20,
        (byte) 22,
        (byte) 24,
        (byte) 26,
        (byte) 28,
        (byte) 30,
        (byte) 32,
        (byte) 34,
        (byte) 36,
        (byte) 38,
        (byte) 40,
        (byte) 42,
        (byte) 44,
        (byte) 46,
        (byte) 48,
        (byte) 50,
        (byte) 52,
        (byte) 54,
        (byte) 56,
        (byte) 58,
        (byte) 60,
        (byte) 62,
        (byte) 64,
        (byte) 66,
        (byte) 68,
        (byte) 70,
        (byte) 72,
        (byte) 74,
        (byte) 76,
        (byte) 78,
        (byte) 80,
        (byte) 82,
        (byte) 84,
        (byte) 86,
        (byte) 88,
        (byte) 90,
        (byte) 92,
        (byte) 94,
        (byte) 96,
        (byte) 98,
        (byte) 100,
        (byte) 102,
        (byte) 104,
        (byte) 106,
        (byte) 108,
        (byte) 110,
        (byte) 112,
        (byte) 114,
        (byte) 116,
        (byte) 118,
        (byte) 120,
        (byte) 122,
        (byte) 124,
        (byte) 126,
        (byte) 128,
        (byte) 130,
        (byte) 132,
        (byte) 134,
        (byte) 136,
        (byte) 138,
        (byte) 140,
        (byte) 142,
        (byte) 144,
        (byte) 146,
        (byte) 148,
        (byte) 150,
        (byte) 152,
        (byte) 154,
        (byte) 156,
        (byte) 158,
        (byte) 160,
        (byte) 162,
        (byte) 164,
        (byte) 166,
        (byte) 168,
        (byte) 170,
        (byte) 172,
        (byte) 174,
        (byte) 176,
        (byte) 178,
        (byte) 180,
        (byte) 182,
        (byte) 184,
        (byte) 186,
        (byte) 188,
        (byte) 190,
        (byte) 192,
        (byte) 194,
        (byte) 196,
        (byte) 198,
        (byte) 200,
        (byte) 202,
        (byte) 204,
        (byte) 206,
        (byte) 208,
        (byte) 210,
        (byte) 212,
        (byte) 214,
        (byte) 216,
        (byte) 218,
        (byte) 220,
        (byte) 222,
        (byte) 224,
        (byte) 226,
        (byte) 228,
        (byte) 230,
        (byte) 232,
        (byte) 234,
        (byte) 236,
        (byte) 238,
        (byte) 240,
        (byte) 242,
        (byte) 244,
        (byte) 246,
        (byte) 248,
        (byte) 250,
        (byte) 252,
        (byte) 254,
        byte.MaxValue,
        (byte) 253,
        (byte) 251,
        (byte) 249,
        (byte) 247,
        (byte) 245,
        (byte) 243,
        (byte) 241,
        (byte) 239,
        (byte) 237,
        (byte) 235,
        (byte) 233,
        (byte) 231,
        (byte) 229,
        (byte) 227,
        (byte) 225,
        (byte) 223,
        (byte) 221,
        (byte) 219,
        (byte) 217,
        (byte) 215,
        (byte) 213,
        (byte) 211,
        (byte) 209,
        (byte) 207,
        (byte) 205,
        (byte) 203,
        (byte) 201,
        (byte) 199,
        (byte) 197,
        (byte) 195,
        (byte) 193,
        (byte) 191,
        (byte) 189,
        (byte) 187,
        (byte) 185,
        (byte) 183,
        (byte) 181,
        (byte) 179,
        (byte) 177,
        (byte) 175,
        (byte) 173,
        (byte) 171,
        (byte) 169,
        (byte) 167,
        (byte) 165,
        (byte) 163,
        (byte) 161,
        (byte) 159,
        (byte) 157,
        (byte) 155,
        (byte) 153,
        (byte) 151,
        (byte) 149,
        (byte) 147,
        (byte) 145,
        (byte) 143,
        (byte) 141,
        (byte) 139,
        (byte) 137,
        (byte) 135,
        (byte) 133,
        (byte) 131,
        (byte) 129,
        (byte) 127,
        (byte) 125,
        (byte) 123,
        (byte) 121,
        (byte) 119,
        (byte) 117,
        (byte) 115,
        (byte) 113,
        (byte) 111,
        (byte) 109,
        (byte) 107,
        (byte) 105,
        (byte) 103,
        (byte) 101,
        (byte) 99,
        (byte) 97,
        (byte) 95,
        (byte) 93,
        (byte) 91,
        (byte) 89,
        (byte) 87,
        (byte) 85,
        (byte) 83,
        (byte) 81,
        (byte) 79,
        (byte) 77,
        (byte) 75,
        (byte) 73,
        (byte) 71,
        (byte) 69,
        (byte) 67,
        (byte) 65,
        (byte) 63,
        (byte) 61,
        (byte) 59,
        (byte) 57,
        (byte) 55,
        (byte) 53,
        (byte) 51,
        (byte) 49,
        (byte) 47,
        (byte) 45,
        (byte) 43,
        (byte) 41,
        (byte) 39,
        (byte) 37,
        (byte) 35,
        (byte) 33,
        (byte) 31,
        (byte) 29,
        (byte) 27,
        (byte) 25,
        (byte) 23,
        (byte) 21,
        (byte) 19,
        (byte) 17,
        (byte) 15,
        (byte) 13,
        (byte) 11,
        (byte) 9,
        (byte) 7,
        (byte) 5,
        (byte) 3,
        (byte) 1
      },
      new byte[256]
      {
        byte.MaxValue,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        byte.MaxValue,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 254,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 251,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 246,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 239,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 230,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 219,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 206,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 191,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 174,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 155,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 134,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 111,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 86,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 59,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30,
        (byte) 30
      }
    };
    protected static ushort[] dialogCrcTable = new ushort[256]
    {
      (ushort) 0,
      (ushort) 4129,
      (ushort) 8258,
      (ushort) 12387,
      (ushort) 16516,
      (ushort) 20645,
      (ushort) 24774,
      (ushort) 28903,
      (ushort) 33032,
      (ushort) 37161,
      (ushort) 41290,
      (ushort) 45419,
      (ushort) 49548,
      (ushort) 53677,
      (ushort) 57806,
      (ushort) 61935,
      (ushort) 4657,
      (ushort) 528,
      (ushort) 12915,
      (ushort) 8786,
      (ushort) 21173,
      (ushort) 17044,
      (ushort) 29431,
      (ushort) 25302,
      (ushort) 37689,
      (ushort) 33560,
      (ushort) 45947,
      (ushort) 41818,
      (ushort) 54205,
      (ushort) 50076,
      (ushort) 62463,
      (ushort) 58334,
      (ushort) 9314,
      (ushort) 13379,
      (ushort) 1056,
      (ushort) 5121,
      (ushort) 25830,
      (ushort) 29895,
      (ushort) 17572,
      (ushort) 21637,
      (ushort) 42346,
      (ushort) 46411,
      (ushort) 34088,
      (ushort) 38153,
      (ushort) 58862,
      (ushort) 62927,
      (ushort) 50604,
      (ushort) 54669,
      (ushort) 13907,
      (ushort) 9842,
      (ushort) 5649,
      (ushort) 1584,
      (ushort) 30423,
      (ushort) 26358,
      (ushort) 22165,
      (ushort) 18100,
      (ushort) 46939,
      (ushort) 42874,
      (ushort) 38681,
      (ushort) 34616,
      (ushort) 63455,
      (ushort) 59390,
      (ushort) 55197,
      (ushort) 51132,
      (ushort) 18628,
      (ushort) 22757,
      (ushort) 26758,
      (ushort) 30887,
      (ushort) 2112,
      (ushort) 6241,
      (ushort) 10242,
      (ushort) 14371,
      (ushort) 51660,
      (ushort) 55789,
      (ushort) 59790,
      (ushort) 63919,
      (ushort) 35144,
      (ushort) 39273,
      (ushort) 43274,
      (ushort) 47403,
      (ushort) 23285,
      (ushort) 19156,
      (ushort) 31415,
      (ushort) 27286,
      (ushort) 6769,
      (ushort) 2640,
      (ushort) 14899,
      (ushort) 10770,
      (ushort) 56317,
      (ushort) 52188,
      (ushort) 64447,
      (ushort) 60318,
      (ushort) 39801,
      (ushort) 35672,
      (ushort) 47931,
      (ushort) 43802,
      (ushort) 27814,
      (ushort) 31879,
      (ushort) 19684,
      (ushort) 23749,
      (ushort) 11298,
      (ushort) 15363,
      (ushort) 3168,
      (ushort) 7233,
      (ushort) 60846,
      (ushort) 64911,
      (ushort) 52716,
      (ushort) 56781,
      (ushort) 44330,
      (ushort) 48395,
      (ushort) 36200,
      (ushort) 40265,
      (ushort) 32407,
      (ushort) 28342,
      (ushort) 24277,
      (ushort) 20212,
      (ushort) 15891,
      (ushort) 11826,
      (ushort) 7761,
      (ushort) 3696,
      (ushort) 65439,
      (ushort) 61374,
      (ushort) 57309,
      (ushort) 53244,
      (ushort) 48923,
      (ushort) 44858,
      (ushort) 40793,
      (ushort) 36728,
      (ushort) 37256,
      (ushort) 33193,
      (ushort) 45514,
      (ushort) 41451,
      (ushort) 53516,
      (ushort) 49453,
      (ushort) 61774,
      (ushort) 57711,
      (ushort) 4224,
      (ushort) 161,
      (ushort) 12482,
      (ushort) 8419,
      (ushort) 20484,
      (ushort) 16421,
      (ushort) 28742,
      (ushort) 24679,
      (ushort) 33721,
      (ushort) 37784,
      (ushort) 41979,
      (ushort) 46042,
      (ushort) 49981,
      (ushort) 54044,
      (ushort) 58239,
      (ushort) 62302,
      (ushort) 689,
      (ushort) 4752,
      (ushort) 8947,
      (ushort) 13010,
      (ushort) 16949,
      (ushort) 21012,
      (ushort) 25207,
      (ushort) 29270,
      (ushort) 46570,
      (ushort) 42443,
      (ushort) 38312,
      (ushort) 34185,
      (ushort) 62830,
      (ushort) 58703,
      (ushort) 54572,
      (ushort) 50445,
      (ushort) 13538,
      (ushort) 9411,
      (ushort) 5280,
      (ushort) 1153,
      (ushort) 29798,
      (ushort) 25671,
      (ushort) 21540,
      (ushort) 17413,
      (ushort) 42971,
      (ushort) 47098,
      (ushort) 34713,
      (ushort) 38840,
      (ushort) 59231,
      (ushort) 63358,
      (ushort) 50973,
      (ushort) 55100,
      (ushort) 9939,
      (ushort) 14066,
      (ushort) 1681,
      (ushort) 5808,
      (ushort) 26199,
      (ushort) 30326,
      (ushort) 17941,
      (ushort) 22068,
      (ushort) 55628,
      (ushort) 51565,
      (ushort) 63758,
      (ushort) 59695,
      (ushort) 39368,
      (ushort) 35305,
      (ushort) 47498,
      (ushort) 43435,
      (ushort) 22596,
      (ushort) 18533,
      (ushort) 30726,
      (ushort) 26663,
      (ushort) 6336,
      (ushort) 2273,
      (ushort) 14466,
      (ushort) 10403,
      (ushort) 52093,
      (ushort) 56156,
      (ushort) 60223,
      (ushort) 64286,
      (ushort) 35833,
      (ushort) 39896,
      (ushort) 43963,
      (ushort) 48026,
      (ushort) 19061,
      (ushort) 23124,
      (ushort) 27191,
      (ushort) 31254,
      (ushort) 2801,
      (ushort) 6864,
      (ushort) 10931,
      (ushort) 14994,
      (ushort) 64814,
      (ushort) 60687,
      (ushort) 56684,
      (ushort) 52557,
      (ushort) 48554,
      (ushort) 44427,
      (ushort) 40424,
      (ushort) 36297,
      (ushort) 31782,
      (ushort) 27655,
      (ushort) 23652,
      (ushort) 19525,
      (ushort) 15522,
      (ushort) 11395,
      (ushort) 7392,
      (ushort) 3265,
      (ushort) 61215,
      (ushort) 65342,
      (ushort) 53085,
      (ushort) 57212,
      (ushort) 44955,
      (ushort) 49082,
      (ushort) 36825,
      (ushort) 40952,
      (ushort) 28183,
      (ushort) 32310,
      (ushort) 20053,
      (ushort) 24180,
      (ushort) 11923,
      (ushort) 16050,
      (ushort) 3793,
      (ushort) 7920
    };
    private int position;
    protected byte signature;
    protected ushort length;
    protected byte opcode;
    protected byte ordinal;
    protected byte[] bodyData;

    public byte Signature
    {
      get
      {
        return this.signature;
      }
      set
      {
        this.signature = value;
      }
    }

    public ushort Length
    {
      get
      {
        return this.length;
      }
      set
      {
        this.length = value;
      }
    }

    public byte Opcode
    {
      get
      {
        return this.opcode;
      }
      set
      {
        this.opcode = value;
      }
    }

    public byte Ordinal
    {
      get
      {
        return this.ordinal;
      }
      set
      {
        this.ordinal = value;
      }
    }

    public byte[] BodyData
    {
      get
      {
        return this.bodyData;
      }
      set
      {
        this.bodyData = value;
      }
    }

    public byte[] Header
    {
      get
      {
        byte[] numArray = new byte[this.ShouldEncrypt ? 5 : 4];
        numArray[0] = this.signature;
        numArray[1] = (byte) ((uint) this.length / 256U);
        numArray[2] = (byte) ((uint) this.length % 256U);
        numArray[3] = this.opcode;
        if (this.ShouldEncrypt)
          numArray[4] = this.ordinal;
        return numArray;
      }
    }

    public int Position
    {
      get
      {
        return this.position;
      }
      set
      {
        this.position = value;
      }
    }

    public abstract bool ShouldEncrypt { get; }

    public abstract bool UseDefaultKey { get; }

    public abstract void Encrypt(Client client);

    public abstract void Decrypt(Client client);

    public byte[] Read(int length)
    {
      if (this.position + (length - 1) >= this.bodyData.Length)
        throw new IndexOutOfRangeException();
      byte[] numArray = new byte[length];
      Buffer.BlockCopy((Array) this.bodyData, this.position, (Array) numArray, 0, length);
      this.position += length;
      return numArray;
    }

    public sbyte ReadSByte()
    {
      if (this.position < this.bodyData.Length)
        return (sbyte) this.bodyData[this.position++];
      throw new IndexOutOfRangeException();
    }

    public byte ReadByte()
    {
      if (this.position < this.bodyData.Length)
        return this.bodyData[this.position++];
      throw new IndexOutOfRangeException();
    }

    public bool ReadBoolean()
    {
      if (this.position < this.bodyData.Length)
        return this.bodyData[this.position++] != (byte) 0;
      throw new IndexOutOfRangeException();
    }

    public short ReadInt16()
    {
      if (this.position + 1 < this.bodyData.Length)
        return (short) ((int) this.bodyData[this.position++] << 8 | (int) this.bodyData[this.position++]);
      throw new IndexOutOfRangeException();
    }

    public ushort ReadUInt16()
    {
      if (this.position + 1 < this.bodyData.Length)
        return (ushort) ((int) this.bodyData[this.position++] << 8 | (int) this.bodyData[this.position++]);
      throw new IndexOutOfRangeException();
    }

    public int ReadInt32()
    {
      if (this.position + 3 < this.bodyData.Length)
        return (int) this.bodyData[this.position++] << 24 | (int) this.bodyData[this.position++] << 16 | (int) this.bodyData[this.position++] << 8 | (int) this.bodyData[this.position++];
      throw new IndexOutOfRangeException();
    }

    public uint ReadUInt32()
    {
      if (this.position + 3 < this.bodyData.Length)
        return (uint) ((int) this.bodyData[this.position++] << 24 | (int) this.bodyData[this.position++] << 16 | (int) this.bodyData[this.position++] << 8) | (uint) this.bodyData[this.position++];
      throw new IndexOutOfRangeException();
    }

    public long ReadInt64()
    {
      if (this.position + 7 < this.bodyData.Length)
        return (long) ((int) this.bodyData[this.position++] << 24 | (int) this.bodyData[this.position++] << 16 | (int) this.bodyData[this.position++] << 8 | (int) this.bodyData[this.position++] | (int) this.bodyData[this.position++] << 24 | (int) this.bodyData[this.position++] << 16 | (int) this.bodyData[this.position++] << 8 | (int) this.bodyData[this.position++]);
      throw new IndexOutOfRangeException();
    }

    public ulong ReadUInt64()
    {
      if (this.position + 7 < this.bodyData.Length)
        return (ulong) ((int) this.bodyData[this.position++] << 24 | (int) this.bodyData[this.position++] << 16 | (int) this.bodyData[this.position++] << 8 | (int) this.bodyData[this.position++] | (int) this.bodyData[this.position++] << 24 | (int) this.bodyData[this.position++] << 16 | (int) this.bodyData[this.position++] << 8 | (int) this.bodyData[this.position++]);
      throw new IndexOutOfRangeException();
    }

    public string ReadString()
    {
      return this.ReadString(this.bodyData.Length - this.position).Trim(new char[1]);
    }

    public string ReadString(int length)
    {
      if (this.position + (length - 1) >= this.bodyData.Length)
        throw new IndexOutOfRangeException();
      byte[] bytes = new byte[length];
      Buffer.BlockCopy((Array) this.bodyData, this.position, (Array) bytes, 0, length);
      this.position += length;
      return Encoding.GetEncoding(949).GetString(bytes);
    }

    public string ReadString8()
    {
      return this.ReadString((int) this.ReadByte());
    }

    public string ReadString16()
    {
      return this.ReadString((int) this.ReadUInt16());
    }

    public void Write(byte[] value)
    {
      for (int index = 0; index < value.Length; ++index)
        this.WriteByte(value[index]);
    }

    public void WriteSByte(sbyte value)
    {
      int length = this.bodyData.Length;
      Array.Resize<byte>(ref this.bodyData, length + 1);
      this.bodyData[length] = (byte) value;
    }

    public void WriteByte(byte value)
    {
      int length = this.bodyData.Length;
      Array.Resize<byte>(ref this.bodyData, length + 1);
      this.bodyData[length] = value;
    }

    public void WriteByte(bool value)
    {
      int length = this.bodyData.Length;
      Array.Resize<byte>(ref this.bodyData, length + 1);
      this.bodyData[length] = value ? (byte) 1 : (byte) 0;
    }

    public void WriteInt16(short value)
    {
      byte[] bytes = BitConverter.GetBytes(value);
      if (BitConverter.IsLittleEndian)
        Array.Reverse((Array) bytes);
      this.Write(bytes);
    }

    public void WriteUInt16(ushort value)
    {
      byte[] bytes = BitConverter.GetBytes(value);
      if (BitConverter.IsLittleEndian)
        Array.Reverse((Array) bytes);
      this.Write(bytes);
    }

    public void WriteInt32(int value)
    {
      byte[] bytes = BitConverter.GetBytes(value);
      if (BitConverter.IsLittleEndian)
        Array.Reverse((Array) bytes);
      this.Write(bytes);
    }

    public void WriteUInt32(uint value)
    {
      byte[] bytes = BitConverter.GetBytes(value);
      if (BitConverter.IsLittleEndian)
        Array.Reverse((Array) bytes);
      this.Write(bytes);
    }

    public void WriteInt64(long value)
    {
      byte[] bytes = BitConverter.GetBytes(value);
      if (BitConverter.IsLittleEndian)
        Array.Reverse((Array) bytes);
      this.Write(bytes);
    }

    public void WriteUInt64(ulong value)
    {
      byte[] bytes = BitConverter.GetBytes(value);
      if (BitConverter.IsLittleEndian)
        Array.Reverse((Array) bytes);
      this.Write(bytes);
    }

    public void WriteString(string value)
    {
      this.Write(Encoding.GetEncoding(949).GetBytes(value));
    }

    public void WriteString8(string value)
    {
      byte[] bytes = Encoding.GetEncoding(949).GetBytes(value);
      this.WriteByte((byte) bytes.Length);
      this.Write(bytes);
    }

    public void WriteString8(string format, params object[] args)
    {
      this.WriteString8(string.Format(format, args));
    }

    public void WriteString16(string value)
    {
      byte[] bytes = Encoding.GetEncoding(949).GetBytes(value);
      this.WriteUInt16((ushort) bytes.Length);
      this.Write(bytes);
    }

    public void WriteString16(string format, params object[] args)
    {
      this.WriteString16(string.Format(format, args));
    }

    public void Clear()
    {
      this.signature = (byte) 170;
      this.length = (ushort) 0;
      this.ordinal = (byte) 0;
      this.bodyData = new byte[0];
      this.position = 0;
    }

    public override string ToString()
    {
      return string.Format("{0:X2} {1}", (object) this.Opcode, (object) BitConverter.ToString(this.bodyData).Replace('-', ' '));
    }

    public string ToASCII()
    {
      return Encoding.GetEncoding(949).GetString(this.bodyData);
    }
  }
}
